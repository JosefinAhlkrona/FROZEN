!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Input file for 3dimensional,
! diagnostic run on Greenland
! Ice Sheet (GIS)
! All units are in MKS-system (SI)!
! Temperature is in Kelvin
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! echo on
!check keywords warn
! Name of output files
$Step = "austfonna19"
$name = "austfonna19"

! Define the parameter in MPa - a - m
$yearinsec = 365.25*24*60*60

$gravity = 9.7696e15
$rhoi = 9.1501e-19 ! replaces: MATC "910.0*1.0E-06*(31556926.0)^(-2.0)"
$rhow = 1000.0*9.1501e-19/910.0 !1.0055e-18

! Prefactor from Cuffey and Paterson (2010) in MPa^{-3} a^{-1}
$A1 = 2.89165e-13*yearinsec*1.0e18 
$A2 = 2.42736e-02*yearinsec*1.0e18 
$Q1 = 60.0e3
$Q2 = 115.0e3

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  Mesh DB "." "mesh2D"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! MATC stuff
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! longitude
$ function longitude(X)  { _longitude = -44.0  - atan(X(0)/X(1))*360/(2*pi) }
!! latitude
$ function latitude(X)  { _latitude = (pi/2 - 2 * atan(sqrt(X(0)*X(0) + X(1)*X(1))/(2*6371225*0.9728)))*360/(2*pi) }

!! surfacetemp
$ function surfacetemp(X) { _surfacetemp=49.13 + 273.15  - 0.7576 * X(0) - 7.992E-03 * X(1) }

!! getArrheniusFactor
$ function getArrheniusFactor(Th){ \
    if (Th<-10) {_getArrheniusFactor=3.985E-13 * exp( -60.0E03/(8.314 * (273.16 + Th)));}\
    else {\
       if (Th>0) _getArrheniusFactor=1.916E03 * exp( -139.0E03/(8.314 *  (273.16)));\
            else _getArrheniusFactor=1.916E03 * exp( -139.0E03/(8.314 *  (273.16 + Th)));}\
}

!! dgetdArrheniusFactordT
$ function dgetArrheniusFactordT(Th){ \
    if (Th<-10) {_dgetArrheniusFactordT=(60.0E03/(8.314 * (273.16 + Th)^2.0))*3.985E-13 * exp( -60.0E03/(8.314 * (273.16 + Th)));}\
    else {\
       if (Th>0) _dgetArrheniusFactordT=0.0;\
            else _dgetArrheniusFactordT=(139.0E03/(8.314 *  (273.16 + Th)^2.0))*1.916E03 * exp( -139.0E03/(8.314 *  (273.16 + Th)));}\
}

!! glen
$ function glen(Th) {\
   EF = 3.0;\
   AF = getArrheniusFactor(Th);\
   _glen = (2.0*EF*AF)^(-1.0/3.0);\
}
!! conductivity
$ function conductivity(T)  { _conductivity=9.828*exp(-5.7E-03*T)}
!! capacity
$ function capacity(T) { _capacity=146.3+(7.253*T)}
$ function oldcapacity(T) { _capacity=2127.5+7.253*(T-273.16)}

!! pressuremeltingpoint
$ function pressuremeltingpoint(PIN) {\
  P = PIN;\
  if (P<0.0) P=0.0;\
  beta=9.8E-08*1.0E06;\
  _pressuremeltingpoint=273.15-(beta*P);\
}

!! Convert Netcdf heat flux watts/meter^2 to MPa m/a
$ function convertheatflux(Th) {\
  _convertheatflux = Th*(31556926.0)*1.0E-06;\
}

!! Convert to Kelvin
$ function convertTemp(th) {\
   _convertTemp=th+273.15;\
}

!! water pressure at glacier front
$ function waterpressure(Z) {\
  rhow = 1012.0;\
  waterline = 0.0;\
  G = 9.81;\
  _waterpressure = 0.0;\
  if (Z>waterline) {\
       _waterpressure = 0.0;\
  }else {\
       _waterpressure = 1.0 * rhow * G * (waterline - Z);\
  }\
}

$function getsurface(in) {\
  surf = in(0);\
  bed = in(1);\
  if ((surf-bed) < 10.0) surf = bed+10.0;\
  _getsurface = surf;\
}


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
  Gas Constant = Real 8.314D00 ! in m-k-s
  Stefan Boltzmann = Real 6.78E-08
  Gravity (4) = 0 -1 0  9.81
  $yearinsec = 365.25*24*60*60
  $rhoi = 910.0/(1.0e6*yearinsec^2)
  $gravity = -9.81*yearinsec^2
  $n = 3.0
  $eta = (2.0*100.0)^(-1.0/n)
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation 
  Coordinate System  = "Cartesian 3D"
  Coordinate Mapping(3) = Integer 1 2 3

  Simulation Type = Transient !simulation starts 125 000 ybp
  Timestepping Method = "BDF"
  BDF Order = 1
  Timestep Intervals = 4
  Timestep Sizes =  1 !0.0833333333         !1 month = 0.0833333333 year

  Extruded Mesh Levels=6		!has to be in init and spinup file too
  
  Steady State Max Iterations = 1
  Steady State Min Iterations = 1
  
  Output File = $name$.result
  !Post File = $name$.vtu
  Output Intervals = 1 !every 6 months
  Restart File = "init.result"

  Restart Position = 0 !0 means lastly stored
  Initialize Dirichlet Conditions = Logical True !hmmm... not sure about this one
  Restart Before Initial Conditions = Logical True !T

  max output level = 22

  Simulation Timing = Logical True
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! SOLVER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Solver 1

! Mesh extrusion parameters

  Exec Solver = "Before Simulation"
  Equation = "Read DEMs"

  Procedure = "ElmerIceSolvers" "Grid2DInterpolator"

  ! Bedrock DEM
  Variable 1 = String "BedDEM"
 Variable 1 data file = File "bed_dem_final.xyz" ! adjust the path if needed later
 Variable 1 x0 = Real    615179.500    
 Variable 1 y0 = Real    8804828.00    
 Variable 1 lx = Real    124000.000    
 Variable 1 ly = Real    121000.000    
 Variable 1 Nx = Integer          125
 Variable 1 Ny = Integer         122
 Variable 1 Invert = Logical True
 Variable 1 Fill = Logical False 
 Variable 1 Position Tol = Real 1.0e-1
 Variable 1 No Data = Real   -9999999.00    
 Variable 1 No Data Tol = Real 1.0 

  ! Surface DEM
  Variable 2 = String "ZsDEM"
Variable 2 data file = File "surf_dem_final.xyz" ! adjust the path if needed later
Variable 2 x0 = Real    615329.500    
Variable 2 y0 = Real    8804878.00    
Variable 2 lx = Real    123400.000    
Variable 2 ly = Real    120400.000    
Variable 2 Nx = Integer         1235
Variable 2 Ny = Integer        1205
Variable 2 Invert = Logical True
Variable 2 Fill = Logical False 
Variable 2 Position Tol = Real 1.0e-1
Variable 2 No Data = Real   -9999999.00    
Variable 2 No Data Tol = Real 1.0 
End 




Solver 2
  !Exec Solver = Never
  Equation = "MapCoordinate"
  Active Coordinate = Integer 3
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  !Dot Product Tolerance = Real 0.0001
  !Minimum Mesh Height = Real 100.0
End 

Solver 3
  !Exec Solver = Never
  Equation = "StructuredProjectToPlane"
  Active Coordinate = Integer 3
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Operator 1 = height
  Operator 2 = depth
  Dot Product Tolerance = Real 0.0001
  !Minimum Mesh Height = Real 100.0
End 



Solver 4
  !Exec Condition = Variable Time
  !       Real MATC "if(tx(0) == 2.0) {1} else  {-1}" 
!Exec Solver = "Before Simulation"
  Equation = "Normal vector"
  Variable = "Normal Vector"
  Variable DOFs = 3
  Optimize Bandwidth = Logical False   
  Procedure = "ComputeNormal" "ComputeNormalSolver"
  ComputeAll = Logical False
End



Solver 5
  Exec Solver = Never
  Equation = ComputeFlux1
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "Temp"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput tempb
End


Solver 6
 ! Exec Solver = Never
  Equation = ComputeFlux2
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "FS"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux0
End

Solver 7
 ! Exec Solver = Never
  Equation = ComputeFlux3
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "FS grad 1"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux1
End

Solver 8
!  Exec Solver = Never
  Equation = ComputeFlux4
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "FS grad 2"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux2
End

Solver 9
!  Exec Solver = Never
  Equation = ComputeFlux5
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "BedDEM"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux3
End

!*******************************************
Solver 10
!  Exec Solver = Never
  Equation = "SIA"
  Procedure = File "SIASolverJosefin2" "SIASolverJosefin2"
  Variable = -nooutput "SIAvar2"
  Variable DOFs = 1
  Exported Variable 1 = SIAFlow[VelocitySIA:3 PressureSIA:1]
  Exported Variable 1 DOFs = 4
  
  Velocity Cutoff = Real 50000

  Active Coordinate = 3

  Bedrock Data = Logical True !if false bedrock is zero
  Bedrock Name = String BedDEM
  Surface Name = String FS

  ! --- Ta tiden ----
  Solver Timing = Logical True
  Linear System Timing = Logical True
  Linear System Timing Cumulative = Logical True
  Solver Timing Cumulative = Logical True


End

Solver 11
 !Exec Solver = Never
  Equation = Navier-Stokes
  Procedure = "FlowSolveSIAFS" "FlowSolverSIAFS"
  Variable = Flow Solution[Velocity:3 Pressure:1]
  Exported Variable 1 = String "ApproximationLevel"
  Exported Variable 1 DOFs = 1
  Exported Variable 2 = String "SIAError"
  Exported Variable 2 DOFs = 1
  Exported Variable 3 = -dofs 1 "BedDEM"
  Exported Variable 4 = -dofs 1 "ZsDEM"
  Stabilize = False
  Element = "p:1 b:4" !
  Bubbles in Global System = Logical False !
  Bubbles = True
  Steady State Convergence Tolerance = 1.0e-5

  Linear System Scaling=False
  Optimize Bandwidth = False

  Nonlinear System Convergence Tolerance = 1.0E-02
  Nonlinear System Max Iterations = 100
  Nonlinear System Newton After Iterations = 500
  Nonlinear System Newton After Tolerance = 1.0e-16
  Nonlinear System Relaxation Factor = 0.9 !below to stabilize, above to speed up
  Linear System Solver = Direct!Iterative
  Linear System Iterative Method=BiCGStabl
  Linear System Max Iterations=1000
  Linear System Preconditioning=ilu

  Linear System Convergence Tolerance=1e-9
  Linear System Direct Method = mumps

  Solver Timing = Logical True
  Linear System Timing = Logical True
  Linear System Timing Cumulative = Logical True
  Solver Timing Cumulative = Logical True

  Back Rotate N-T Solution = Logical False
!-----------------------------------
  Couple Approximations = Logical True
  SIA as initial condition = Logical True 
  Error Estimation Method = String "solution"
  Error Estimation Intervals = Integer 1
  Relative Error Allowed In Percent = Real 10.0
  Absolute Error Allowed = Real 1.0 !m/a


End





Solver 12
  ! usually, the solver is executed only after the thermo-mechanical
  ! problem has obtained a solution on the time-level
  Exec Solver = "After TimeStep"

  Equation =  String "Free Surface Evolution"
  ! the name of the variable
  Variable = "FS"
  Variable DOFs = 1

  Procedure = "FreeSurfaceSolver" "FreeSurfaceSolver"

  ! this enables the limitation of the free surface
  ! by upper and/or lower limits (see material section above)
  ! using a variational inequality formulation
  Apply Dirichlet = Logical True

  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations  = 1000
  Linear System Preconditioning = ILU1
  Linear System Convergence Tolerance = 1.0e-08

  Nonlinear System Max Iterations = 100 ! variational inequality needs more than one round
  Nonlinear System Min Iterations = 2
  Nonlinear System Convergence Tolerance = 1.0e-06

  Steady State Convergence Tolerance = 1.0e-4
  ! switch that off in parallel runs, as it may introduce
  ! partition dependent relaxation factors:
  ! Maximum Displacement = Real 10.0

  Stabilization Method = Bubbles
   Flow Solution Name = String "Flow Solution"

  ! this is needed if the variational inequality method
  ! (Apply Dirichlet = Logical True) is applied
  Exported Variable 1 =  FS Residual
  Exported Variable 1 DOFS = 1

  ! this variable contains the free surface's initial
  ! values (set in initial condition above and needed
  ! for limiting maximum changes as well as in the boundary condition
  ! at the free surface)
  Exported Variable 2 = ReferenceFS
  Exported Variable 2 DOFS = 1
End




Solver 13
Exec Solver = after saving
!Exec Solver = never
Equation = "result output"
Procedure = "ResultOutputSolve" "ResultOutputSolver"
Output File Name = $name$.vtu
Vtu Format = Logical True
Binary Output = Logical True ! binary format is the default
Single Precision = Logical False ! double precision is the default
! In the Vtu format all fields are saved if the user does not list them explicitely.
End



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BODIES (i.e., domains to compute on)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body 1
  Name = "ice"
  Equation = 1
  Material = 1
  Body Force = 1
  Initial Condition = 1
End

Body 2
  Name= "free surface"
  Equation = 2
  Material = 2
  Body Force = 2
  Initial Condition = 2
End

Body 3
  Name= "bedrock"
  Equation = 3
  Material = 1
  Body Force = 2
  Initial Condition = 2
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Equation 1
 Active Solvers(8) = 1 2 3 4 5 10 11 13
  Convection = Computed
  Flow Solution Name = String "Flow Solution"
  NS Convect = Logical False
End

Equation 2
 Active Solvers(4) = 6 7 8 12
  Flow Solution Name = String "Flow Solution"
  Convection = Computed
 NS Convect = False
End

Equation 3
 Active Solvers(1) = 9
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1

!---not sure if below stuff is necessary
 Velocity 1 = real 0.0
 Velocity 2 = real 0.0
 Velocity 3 = real 0.0
 Pressure =   real 0.0


	!Temp = Real 263.

End

Initial Condition 2
  Bottom Surface Elevation = Equals BedDEM


 ReferenceFS = Variable ZsDEM,BedDEM
 Real MATC "getsurface(tx)" 

 FS =  Variable ZsDEM,BedDEM
 Real MATC "getsurface(tx)" 


! this sets a zero deviation from the input mesh
 Mesh Update 3 = Real 0.0
 Mesh Update 2 = Real 0.0
 Mesh Update 1 = Real 0.0
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!BODY FORCES
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1 = 0.0
  Flow BodyForce 2 = 0.0
  Flow BodyForce 3 = MATC "-9.81*(31556926.0)^(2.0)"

	Temp = Real 263.

End

!! accumulation flux in m/year
Body Force 2
  FS Accumulation Flux 1 = Real 0.0e0
  FS Accumulation Flux 2 = Real 0.0e0
  FS Accumulation Flux 3 = real $1.0 * 1000.0/910.0

	Temp = Real 263.

End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! MATERIAL
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1



!-----------------
! viscosity stuff
!----------------

! isothermal case
  Viscosity Model = String "power law"
  Isothermal = Logical True
  Viscosity = Real 0.1 !0.17 !Real MATC "(2.0*100.0)^(-1.0/3.0)"
  Viscosity Exponent = Real 0.3333333333

! this entry is to tell the Stokes solver whether or not to use a previously calculated approximation

 Previous ApproximationLevel = Logical False
 SIA node = Real -1.0 ! in the case of false, the program reads this in as a dummy value for the SIA approximation level (if values are greater than zero, then it assumes the SIA solution at the node is ok)



! ice density
 Density = Real MATC "910.0*1.0E-06*(31556926.0)^(-2.0)"

  !Bottom Surface Elevation = Equals BedDEM
 

 


 Cauchy = Logical True

 Critical Shear Rate = Real 1.0E-10 




End

Material 2


 Density =  Real MATC "910.0*1.0E-06*(31556926.0)^(-2.0)"
 ! the minimum value of the free surface variable
 ! keeping a minimum flow depth of 10 meters
 Min FS = Variable Coordinate 3, Height
      Real MATC "tx(0) - tx(1) + 10.0"
 ! allow a maximum thickening of 100 meters with
 ! respect to the initial position of the free surface
 Max FS = Variable ReferenceFS
      Real MATC "tx(0) + 100.0"

End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BOUNDARY CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Boundary Condition 1
  Target Boundaries = 1
  Name = "Side"

  Flow Force BC = Logical False
  ComputeNormal = Logical False
  Normal-Tangential Velocity = Logical False
  ComputeNormal = Logical False

! FreeSurfaceSolver solver

  Mesh Update 1 = Real 0.0
  Mesh Update 2 = Real 0.0
  Mesh Update 3 = Real 0.0
End


Boundary Condition 2
  Name = "Bottom"
  Bottom Surface = Equals BedDEM
  Body Id = 3
  Save Line = Logical True

! flow conditions
  Flow Force BC = Logical True
  Mass Consistent Normals = Logical True
  Normal-Tangential Velocity = Logical True
  External Pressure = 0.0  
  Slip Coefficient 2  = real 0.1
  Slip Coefficient 3  = real 0.1

  ComputeNormal = Logical True


  Height = Real 0.0E00
  Velocity 1 = Real 0.0


! FreeSurfaceSolver solver

  Mesh Update 1 = Real 0.0
  Mesh Update 2 = Real 0.0
  Mesh Update 3 = Real 0.0

End

Boundary Condition 3
  Body Id = 2
  Name = "Surface"
  Top Surface = Variable Time, ZsDEM, BedDEM, FS
   Real Procedure  "linkZsGreen_newData" "linkZsGreen_newData" 

  Pressure = Real 0.0
  ComputeNormal = Logical False
  Save Line = Logical True
  Depth = Real 0.0
  Flow Force BC = False
  ComputeNormal = Logical False
  Normal-Tangential Velocity = Logical False

  External Pressure = 0.0  
  Save Scalars = Logical True

  Mesh Update 1 = Real 0.0
  Mesh Update 2 = Real 0.0
  Mesh Update 3 = Variable FS, ReferenceFS
     Real MATC "tx(0) - tx(1)"
End
