!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Input file for 3dimensional,
! diagnostic run on Greenland
! Ice Sheet (GIS)
! All units are in MKS-system (SI)!
! Temperature is in Kelvin
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! echo on
!check keywords warn

$name = "Future"

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  Mesh DB "." "mesh"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! MATC stuff
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! longitude
$ function longitude(X)  { _longitude = -44.0  - atan(X(0)/X(1))*360/(2*pi) }
!! latitude
$ function latitude(X)  { _latitude = (pi/2 - 2 * atan(sqrt(X(0)*X(0) + X(1)*X(1))/(2*6371225*0.9728)))*360/(2*pi) }

!! surfacetemp
$ function surfacetemp(X) { _surfacetemp=49.13 + 273.15  - 0.7576 * X(0) - 7.992E-03 * X(1) }

!! getArrheniusFactor
$ function getArrheniusFactor(Th){ \
    if (Th<-10) {_getArrheniusFactor=3.985E-13 * exp( -60.0E03/(8.314 * (273.16 + Th)));}\
    else {\
       if (Th>0) _getArrheniusFactor=1.916E03 * exp( -139.0E03/(8.314 *  (273.16)));\
            else _getArrheniusFactor=1.916E03 * exp( -139.0E03/(8.314 *  (273.16 + Th)));}\
}

!! dgetdArrheniusFactordT
$ function dgetArrheniusFactordT(Th){ \
    if (Th<-10) {_dgetArrheniusFactordT=(60.0E03/(8.314 * (273.16 + Th)^2.0))*3.985E-13 * exp( -60.0E03/(8.314 * (273.16 + Th)));}\
    else {\
       if (Th>0) _dgetArrheniusFactordT=0.0;\
            else _dgetArrheniusFactordT=(139.0E03/(8.314 *  (273.16 + Th)^2.0))*1.916E03 * exp( -139.0E03/(8.314 *  (273.16 + Th)));}\
}

!! glen
$ function glen(Th) {\
   EF = 3.0;\
   AF = getArrheniusFactor(Th);\
   _glen = (2.0*EF*AF)^(-1.0/3.0);\
}
!! conductivity
$ function conductivity(T)  { _conductivity=9.828*exp(-5.7E-03*T)}
!! capacity
$ function capacity(T) { _capacity=146.3+(7.253*T)}
$ function oldcapacity(T) { _capacity=2127.5+7.253*(T-273.16)}

!! pressuremeltingpoint
$ function pressuremeltingpoint(PIN) {\
  P = PIN;\
  if (P<0.0) P=0.0;\
  beta=9.8E-08*1.0E06;\
  _pressuremeltingpoint=273.15-(beta*P);\
}

!! Convert Netcdf heat flux watts/meter^2 to MPa m/a
$ function convertheatflux(Th) {\
  _convertheatflux = Th*(31556926.0)*1.0E-06;\
}

!! Convert to Kelvin
$ function convertTemp(th) {\
   _convertTemp=th+273.15;\
}

$function getsurface(in) {\
  surf = in(0);\
  bed = in(1);\
  if ((surf-bed) < 10.0) surf = bed+10.0;\
  _getsurface = surf;\
}


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
  Gas Constant = Real 8.314D00 ! in m-k-s
  Stefan Boltzmann = Real 6.78E-08
  Gravity (4) = 0 -1 0  9.81
  $yearinsec = 365.25*24*60*60
  $rhoi = 910.0/(1.0e6*yearinsec^2)
  $gravity = -9.81*yearinsec^2
  $n = 3.0
  $eta = (2.0*100.0)^(-1.0/n)
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation 
  Coordinate System  = "Cartesian 3D"
  Coordinate Mapping(3) = Integer 1 2 3

  Simulation Type = Transient !simulation starts 125 000 ybp
  Timestepping Method = "BDF"
  BDF Order = 1
  Timestep Intervals = 2
  Timestep Sizes =  0.0833333333         !1 month = 0.0833333333 year

  Extruded Mesh Levels=4		!has to be in init and spinup file too
  
  Steady State Max Iterations = 1
  Steady State Min Iterations = 1
  
  Output File = $name$.result
  !Post File = $name$.vtu
  Output Intervals = 1 !every 6 months

  Restart File = "relaxationffs.result" !spinup
  Restart Position = 0 !0 means lastly stored
  Initialize Dirichlet Conditions = Logical True !hmmm... not sure about this one
  Restart Before Initial Conditions = Logical True !T

  max output level = 4

  Simulation Timing = Logical True
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! SOLVER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Solver 1
  Exec Solver = Before simulation
  Equation = Reader
  Procedure = "./GridDataReader1" "GridDataReader"

  !---- NOTE: File is case sensitive, String is not!
  Filename = File "./Greenland_bedrock_topography_V3.nc"

  X Dim Name = String "X"
  Y Dim Name = String "Y"

  X Var Name = String "projection_x_coordinate"
  Y Var Name = String "projection_y_coordinate"

  !--- Interpolation variables
  X Epsilon  = Real 1.0e-2
  Y Epsilon  = Real 1.0e-2
  Epsilon Time = Real 0.01

  Interpolation Bias = Real 0.0
  Interpolation Multiplier = Real 1.0

  Is Time Counter = Logical True

  Variable 1 = File "SurfaceElevation"
  Variable 2 = File "BedrockElevation"


  Enable Scaling = Logical False ! Scales the Elmer grid to match the NetCDF grid 
End

Solver 2
  Exec Solver = Before simulation 
  Equation = Reader2
  Procedure = "./GridDataReader2" "GridDataReader"

  !---- NOTE: File is case sensitive, String is not!
  Filename = File "./GreenlandBeta.nc" 

  Time Dim Name = String "time"
  X Dim Name = String "X" 
  Y Dim Name = String "Y"

  Time Var Name = String "time"
  X Var Name = String "x" 
  Y Var Name = String "y"

  !--- Interpolation variables
  X Epsilon  = Real 1.0e-2 
  Y Epsilon  = Real 1.0e-2 
  Epsilon Time = Real 0.01

  Interpolation Bias = Real 0.0 
  Interpolation Multiplier = Real 1.0 

  Is Time Counter = Logical True

  Variable 1 = Beta

  Valid Min Value 1 = Real 1.0e-05 !TO DO in GriddataReader read attribute _fillVal and allow to change it

  Enable Scaling = Logical False ! Scales the Elmer grid to match the NetCDF grid 
End


Solver 3
  Exec Interval = Integer 1 !every year
  !Exec Solver = "never"
  Variable = String -nooutput "dummy3"
  Variable DOFs = 1

  Equation = "Reader4"
  Procedure = "./GridDataReader4" "GridDataReader"

  Filename = File "./gl_climate_forcing_2004_2098_v4.nc"
  
  Time Dim Name = String "time"
  X Dim Name = String "x" 
  Y Dim Name = String "y"

  Time Var Name = String "time"
  X Var Name = String "x" 
  Y Var Name = String "y"

  !--- Interpolation variables
  X Epsilon  = Real 1.0e-2
  Y Epsilon  = Real 1.0e-2
  Epsilon Time = Real 0.01
  
  Interpolation Bias = Real 0.0 
  Interpolation Multiplier = Real 1.0 
  
  Is Time Counter = Logical True

  Enable Scaling = Logical False ! Scales the Elmer grid to match the NetCDF grid 

  Variable 1 = String "preciptation"
  Variable 2 = String "annualtemp"
  Variable 3 = String "julytemp"
End


Solver 4
  Exec Solver = Before simulation 
  Equation = Reader3
  Procedure = "./GridDataReader3" "GridDataReader"


 !---- NOTE: File is case sensitive, String is not!

  Filename = File "./greenland_5km_dev1.2.nc" 
  X Dim Name = String "X1"
  Y Dim Name = String "Y1"

  X Var Name = String "x1"
  Y Var Name = String "y1"

  !--- Interpolation variables
  X Epsilon  = Real 1.0e-2
  Y Epsilon  = Real 1.0e-2
  Epsilon Time = Real 0.01

  Interpolation Bias = Real 0.0
  Interpolation Multiplier = Real 1.0

  Is Time Counter = Logical True

  Variable 1 = "bheatflx"
 
  Enable Scaling = Logical False ! Scales the Elmer grid to match the NetCDF grid 
End

Solver 5
  !Exec Solver = Never
  Equation = "MapCoordinate"
  Active Coordinate = Integer 3
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"
  !Dot Product Tolerance = Real 0.0001
  !Minimum Mesh Height = Real 100.0
End 

Solver 6
  !Exec Solver = Never
  Equation = "StructuredProjectToPlane"
  Active Coordinate = Integer 3
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Operator 1 = height
  Operator 2 = depth
  !Dot Product Tolerance = Real 0.0001
  !Minimum Mesh Height = Real 100.0
End 


Solver 7
  Exec Solver = Before simulation
  Equation = Reader
  Procedure = "./GridDataReader3" "GridDataReader"

  !---- NOTE: File is case sensitive, String is not!

  Filename = File "./greenland_5km_dev1.2.nc" 
  X Dim Name = String "X1"
  Y Dim Name = String "Y1"

  X Var Name = String "x1"
  Y Var Name = String "y1"

  !--- Interpolation variables
  X Epsilon  = Real 1.0e-2
  Y Epsilon  = Real 1.0e-2
  Epsilon Time = Real 0.01

  Interpolation Bias = Real 0.0
  Interpolation Multiplier = Real 1.0

  Is Time Counter = Logical True

  Variable 1 = File "presprcp"
  Variable 2 = File "usrf"

  Enable Scaling = Logical False ! Scales the Elmer grid to match the NetCDF grid 
End

Solver 8 !adds anomalies from ar4
 !Exec Solver = "never"
 !Exec Solver = "Before TimeStep"
 Variable = String -nooutput "dummy5"
 Variable DOFs = 1

 Equation = "pdd" 

 Optimize Bandwidth = Logical False
 Procedure = File "./pdd" "pdd"

 TSURFACE = Integer 6  !TSURFACE = 6 basically means nothing, TSURFACE = 4 reads data from GRIP-file, TSURFACE=5 gets glacial index
 ABLSURFACE = Integer 1
 SOLID_PRECIP = Integer 1
 ACCSURFACE = Integer 6
 PRECIP_ANOM_INTERPOL = Integer 2
 TEMP_PRESENT_PARA = Integer 2
 GRID = Integer 1
 YEAR_SEC = Real 1.0
 Precipitation input mode = String "constant"
 Temperature input mode = String "parametrization"
 Use Anomalies = Logical True
 Atmospheric laps rate = Logical True
 Anomalies scaling factor = Real 1.0

 PATH = String "-"
 Grip Temperature file = String "grip_temp.dat"

 Exported Variable 1 = String "as"
 Exported Variable 1 DOFs = 1
 Exported Variable 2 = String "temp_surf"
 Exported Variable 2 DOFs = 1 
 Exported Variable 3 = String "Longitude"
 Exported Variable 3 DOFs = 1
 Exported Variable 4 = String "Latitude"
 Exported Variable 4 DOFs = 1
End

Solver 9
  !Exec Condition = Variable Time
  !       Real MATC "if(tx(0) == 2.0) {1} else  {-1}" 
  Equation = "Normal vector"
  Variable = "Normal Vector"
  Variable DOFs = 3
  Optimize Bandwidth = Logical False   
  Procedure = "ComputeNormal" "ComputeNormalSolver"
  ComputeAll = Logical False
End

Solver 10
  !Exec Solver = Never
  Equation = ComputeFlux1
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "Temp"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput tempb
End


Solver 11
 ! Exec Solver = Never
  Equation = ComputeFlux2
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "FS"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux0
End

Solver 12
  !Exec Solver = Never
  Equation = ComputeFlux3
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "FS grad 1"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux1
End

Solver 13
  !Exec Solver = Never
  Equation = ComputeFlux4
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "FS grad 2"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux2
End

Solver 14
  !Exec Solver = Never
  Equation = ComputeFlux5
  Procedure = "FluxSolver" "FluxSolver"
  Calculate Grad = Logical True
  Target Variable = String "BedrockElevation"
  Linear System Solver = "Direct"
  Linear System Direct Method = mumps
  Variable = -nooutput flux3
End

!*******************************************
Solver 15
 ! Exec Solver = Never
  Equation = "SIA"
  Procedure = File "SIASolverJosefin2" "SIASolverJosefin2"
  Variable = -nooutput "SIAvar2"
  Variable DOFs = 1
  Exported Variable 1 = SIAFlow[VelocitySIA:3 PressureSIA:1]
  Exported Variable 1 DOFs = 4
  
  Velocity Cutoff = Real 50000

  Active Coordinate = 3

  Bedrock Data = Logical True !if false bedrock is zero
  Bedrock Name = String BedrockElevation

  ! --- Ta tiden ----
  Solver Timing = Logical True
  Linear System Timing = Logical True
  Linear System Timing Cumulative = Logical True
  Solver Timing Cumulative = Logical True

 Exported Variable 2 = String "preciptation"
 Exported Variable 2 DOFs = 1
 Exported Variable 3 = String "annualtemp"
 Exported Variable 3 DOFs = 1
 Exported Variable 4 = String "julytemp"
 Exported Variable 4 DOFs = 1
Exported Variable 5 = String "presentprecip"
 Exported Variable 5 DOFs = 1


End

Solver 16
 ! Exec Solver = Never
  Equation = Navier-Stokes
  Procedure = "FlowSolveSIAFS" "FlowSolverSIAFS"
  Variable = Flow Solution[Velocity:3 Pressure:1]
  Exported Variable 1 = String "ApproximationLevel"
  Exported Variable 1 DOFs = 1
  Exported Variable 2 = String "SIAError"
  Exported Variable 2 DOFs = 1
  Stabilize = False
  Element = "p:1 b:4" !
  Bubbles in Global System = Logical False !
  Bubbles = True
  Steady State Convergence Tolerance = 1.0e-5

  Linear System Scaling=False
  Optimize Bandwidth = False

  Nonlinear System Convergence Tolerance = 1.0E-02
  Nonlinear System Max Iterations = 100
  Nonlinear System Newton After Iterations = 500
  Nonlinear System Newton After Tolerance = 1.0e-16
  Nonlinear System Relaxation Factor = 0.5 !below to stabilize, above to speed up
  Linear System Solver = Direct!Iterative
  Linear System Iterative Method=BiCGStabl
  Linear System Max Iterations=1000
  Linear System Preconditioning=ilu
  Linear System Convergence Tolerance=1e-9
  Linear System Direct Method = mumps

  Solver Timing = Logical True
  Linear System Timing = Logical True
  Linear System Timing Cumulative = Logical True
  Solver Timing Cumulative = Logical True

!-----------------------------------
  Couple Approximations = Logical True
  SIA as initial condition = Logical True 
  Error Estimation Method = String SolutionBasedErrorBound !ResidualBasedErrorEstimate
  Error Estimation Intervals = Integer 1
  Relative Error Allowed In Percent = Real 20.0
  Absolute Error Allowed = Real 20.0 !m/a
End

Solver 17
  Exec Solver = Never
  Equation = String "Homologous Temperature Equation"
  Procedure =  File  "./TemperateIce" "TemperateIceSolver"
  ! Comment next line in parallel, as EliminateDirichlet does
  ! not work in parallel
! Before Linsolve = "EliminateDirichlet" "EliminateDirichlet"
  Optimize Bandwidth = Logical False
  Variable = String "Temp"
  Variable DOFs = 1
  Linear System Solver = "Direct"
  Linear System Direct Method = "mumps"
  Linear System Iterative Method = "BiCGStab"
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0E-07
  Linear System Abort Not Converged = True
  Linear System Preconditioning = "ILU1"
  Linear System Residual Output = 1
  Steady State Convergence Tolerance = 3.0E-03
  Nonlinear System Convergence Tolerance = 1.0E-05
  Nonlinear System Max Iterations = 20
  Nonlinear System Min Iterations = 2
  Nonlinear System Relaxation Factor = Real $9.0/10.0
  ! this applies limitation
  !-------------------------------
  Apply Dirichlet = Logical True
  Stabilize = False
  Bubbles = False
  Exported Variable 1 = String "Temp Homologous"
  Exported Variable 1 DOFs = 1
  Exported Variable 2 = String "Temp Residual"
  Exported Variable 2 DOFs = 1
  !------------------------
  !Loop While Unconstrained Nodes = Logical True
End


Solver 18
  !Exec Solver = "never"
  Equation =  String "Free Surface Evolution"
  Variable = "FS"

  Procedure = "FreeSurfaceSolver" "FreeSurfaceSolver"

  Nonlinear System Max Iterations = 100
  Nonlinear System Min Iterations = 2
  Nonlinear System Convergence Tolerance = 1.0e-06


  Apply Dirichlet = Logical True

  Linear System Solver = Direct!Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Direct Method = "mumps"
  Linear System Max Iterations  = 1000
  Linear System Preconditioning = ILU1
  Linear System Convergence Tolerance = 1.0e-08
  Optimize Bandwidth = Logical False

  Steady State Convergence Tolerance = 1.0e-4
  ! switch that off in parallel runs, as it may introduce 
  ! partition dependent relaxation factors:
  ! Maximum Displacement = Real 10.0
  Stabilization Method = Stabilize
 
  Flow Solution Name = String "Flow Solution"
 
  Exported Variable 1 =  FS Residual
  Exported Variable 1 DOFS = 1
  Exported Variable 2 = ReferenceFS
  Exported Variable 2 DOFS = 1
End


Solver 19
 Equation = "IceVolume"
 Variable = String -nooutput "dummy7"
 Optimize Bandwidth = False
 Variable DOFs = 1
 Exec Solver = "After TimeStep"
 Procedure = File "./VolumeSolver" "VolumeSolver"
 Output Filename = String "Volume_Future.out"
End


Solver 20
Exec Solver = after saving
Equation = "result output"
Procedure = "ResultOutputSolve" "ResultOutputSolver"
Output File Name = $name$.vtu
Vtu Format = Logical True
Binary Output = Logical True ! binary format is the default
Single Precision = Logical False ! double precision is the default
! In the Vtu format all fields are saved if the user does not list them explicitely.
Scalar Field 1 = String BedrockElevation
Scalar Field 2 = String SurfaceElevation
Scalar Field 3 = String Beta
Scalar Field 4 = String bheatflx
Scalar Field 5 = String as
Scalar Field 6 = temp_surf
Scalar Field 7 = temp homologous
Scalar Field 8 = temp residual
Scalar Field 9 = FS
Scalar Field 10 = ReferenceFS
Vector Field 1 = String SIAFlow
Vector Field 2 = temp grad
Scalar Field 11 = PressureSIA
Vector Field 3 = VelocitySIA
Scalar Field 12 = Pressure
Vector Field 4= Velocity
Scalar Field 13 = ApproximationLevel
Scalar Field 14 = SIAError
Scalar Field 15 = preciptation
Scalar Field 16 = annualtemp
Scalar Field 17 = julytemp
End

Solver 21
  Exec Solver ="After TimeStep"
  Equation = SaveScalars
  Procedure = "SaveData" "SaveScalars"
  Filename = "SurfaceIntegrals_Future.dat"
  Operator 1 = boundary int
  Variable 1 = temp_surf
  Operator 2 = boundary int
  Variable 2 = as
  Operator 3 = area
  Variable 3 = as
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BODIES (i.e., domains to compute on)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body 1
  Name = "ice"
  Equation = 1
  Material = 1
  Body Force = 1
  Initial Condition = 1
End

Body 2
  Name= "free surface"
  Equation = 2
  Material = 2
  Body Force = 2
  Initial Condition = 2
End

Body 3
  Name= "bedrock"
  Equation = 3
  Material = 1
  Body Force = 2
  Initial Condition = 2
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Equation 1
 Active Solvers(14) = 1 2 3 4 5 6 7 9 10 15 16 17 19 20
 Convection = String "computed"
 Flow Solution Name = String "Flow Solution"
 NS Convect = False
End

Equation 2
 Active Solvers(6) = 8 11 12 13 18 21
 Flow Solution Name = String "Flow Solution"
 Convection = "computed"
 NS Convect = False
End

Equation 3
 Active Solvers(1) = 14
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
 Longitude = Variable Coordinate 3
      Real Procedure "./geo_coord" "geo_coord_lambda"
 Latitude = Variable Coordinate 3
      Real Procedure "./geo_coord" "geo_coord_phi"
 !Temp = Real 263.15 !-10 grader celsius

!---not sure if below stuff is necessary
 Velocity 1 = Equals velocitysia 1 
 Velocity 2 = Equals velocitysia 2
 Velocity 3 = Equals velocitysia 3
 Pressure =   Equals pressure
End

Initial Condition 2
  Bottom Surface Elevation = Equals BedrockElevation
 Longitude = Variable Coordinate 3
      Real Procedure "./geo_coord" "geo_coord_lambda"
 Latitude = Variable Coordinate 3
      Real Procedure "./geo_coord" "geo_coord_phi"

 ReferenceFS = Variable SurfaceElevation,BedrockElevation
 Real MATC "getsurface(tx)" 

 FS =  Variable SurfaceElevation,BedrockElevation
 Real MATC "getsurface(tx)" 
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!BODY FORCES
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1 = 0.0
  Flow BodyForce 2 = 0.0
  Flow BodyForce 3 = MATC "-9.81*(31556926.0)^(2.0)"

  Temp Volume Source = Real 0.0
  Friction Heat = Logical True
  presentprecip = Equals presprcp
End

!! accumulation flux in m/year
Body Force 2
  FS Accumulation Flux 1 = Real 0.0e0
  FS Accumulation Flux 2 = Real 0.0e0
  FS Accumulation Flux 3 = Equals as
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! MATERIAL
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1
 Critical Shear Rate = Real 1.0E-03 !man that's huge!

 Viscosity Model = String "power law"
 Viscosity Exponent = $(1.0/3.0)

 Density = Real MATC "910.0*1.0E-06*(31556926.0)^(-2.0)"
 Cauchy = Logical True

 !Convection Velocity 1 = Real 10000.0
 !Convection Velocity 2 = Real 10000.0
 !Convection Velocity 3 = Real 10000.0

  Bottom Surface Elevation = Equals BedrockElevation

! non-linear, thermo-mechanical
  Isothermal = Logical False
 
 !Viscosity = Real MATC "(2.0*100.0)^(-1.0/3.0)"
  Viscosity = Variable "Temp Homologous"
     Real MATC "glen(tx)*31556926.0^(-1.0/3.0)*1.0E-06"

  dArrheniusFactordT=Variable "Temp Homologous"
 	Real MATC "dgetArrheniusFactordT(tx)"
  !dArrheniusFactordT= Real 0.0

! 0-th step, linear rheology
! Viscosity = Real MATC "1.0E15*1.0E-06*(31556926.0)^(-1.0)"

! 1st step, non-linear iso-thermal 
! Viscosity =  Real MATC "glen(-10.0)*(31556926.0)^(-1.0/3.0)*1.0E-06"

 Temp Heat Capacity = Variable Temp
    Real MATC "capacity(tx)*(31556926)^(2.0)"
  !Temp Heat Capacity = Real MATC "capacity(273.15)*(31556926)^(2.0)"

 Temp Heat Conductivity = Variable Temp
   Real MATC "conductivity(tx)*(31556926)*1.0E-06"
  !Temp Heat Conductivity = Real MATC "conductivity(273.15)*(31556926)*1.0E-06"

 Temp Upper Limit = Variable Pressure
   Real MATC "pressuremeltingpoint(tx)"
 !Temp Upper Limit = Real 273000000000000000000000000000000000000.15

 Latent Heat = Real MATC "3.35E5*(31556926)^(2.0)"
 Temperature Name = String "Temp"

 Cauchy = Logical True

 Previous ApproximationLevel = Logical False
 SIA node = Real -1.0 !FS

End

Material 2

 
 Huybrechts PDD factors = Logical True                                 ! Huybrechts and de Wolde (1999)
 Degree-day factor for snow = Real 2.73d+00                            ! in (mm WE)/(d*deg C)
 Degree-day factor for ice = Real 7.28d+00                             ! in (mm WE)/(d*deg C)

 Standard deviation of the air temperature = Real 5.2d+00             ! Tarasov's value: 5.2d+00 (deg C).

 Separation latitude = Real 0.0d+00                                    ! for the computation of the
                                                                       ! degree-day factors beta1 and beta2: South of PHI_SEP, 
                                                                       ! only the high-temperature values are used, whereas 
                                                                       ! north of PHI_SEP beta1 and beta2 are 
                                                                       ! temperature-dependentin (deg N). 

 Saturation factor = Real 6.0d-01                                      ! for the formation of superimposed ice

 Firn-warming correction = Real 9.7155d+00                             ! in (d*deg C)/(mm WE)

 Density of pure water = Real 1.0d+03                                  ! 1000 kg/m3

 Density of ice = Real 9.1d+02                                         ! 910 kg/m3
 
 Degree-day factor for snow at low summer temperature = Real 2.41d+00  ! <= -1 deg C in (mm WE)/(d*deg C)
 Degree-day factor for snow at high summer temperature = Real 3.91d+00 ! >= +10 deg C in (mm WE)/(d*deg C)
 Degree-day factor for ice at low summer temperature = Real 15.67d+00  ! <= -1 deg C in (mm WE)/(d*deg C)
 Degree-day factor for ice at high summer temperature = Real 7.55d+00  ! >= +10 deg C in (mm WE)/(d*deg C)


!Min FS = Real 100.0
 Min FS =  Variable Height, Coordinate 3
    Real MATC "tx(1) - tx(0) + 10.0"
 Max FS = Real 4000.0
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BOUNDARY CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Boundary Condition 1
  Target Boundaries = 1
  Name = "Side"
  ComputeNormal = Logical False
  Normal-Tangential Velocity = Logical False
  Flow Force BC = Logical False
  Temp = Variable Coordinate 3
      Real Procedure "./lateralTemp" "lateralTemp"

End

Boundary Condition 2
  Name = "Bottom"
  Bottom Surface = Equals BedrockElevation 
  Body Id = 3
  Save Line = Logical True
  Mass Consistent Normals = Logical True
  Normal-Tangential Velocity = Logical True
  Flow Force BC = Logical True
  Slip Coefficient 2  = Equals Beta
  Slip Coefficient 3  = Equals Beta
  ComputeNormal = Logical True
  Height = Real 0.0E00
  Temp Flux BC = Logical True
  Temp Flux BC Sliding Heat = Logical True
  Temp Heat Flux = Variable bheatflx
           Real MATC "convertheatflux(tx)"
  Velocity 1 = Real 0.0
End

Boundary Condition 3
  Body Id = 2
  Name = "Surface"
  Top Surface = Variable Time, SurfaceElevation, BedrockElevation, FS
   Real Procedure  "linkZsGreen_newData" "linkZsGreen_newData" 

  Pressure = Real 0.0
  ComputeNormal = Logical False
  Save Line = Logical True
  Depth = Real 0.0
  Flow Force BC = True
  External Pressure = 0.0  
  Temp = Variable temp_surf
       Real MATC "convertTemp(tx)"  
  External Pressure = 0.0  
  Save Scalars = Logical True
End

